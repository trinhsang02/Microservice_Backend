version: '3.8'

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672" # RabbitMQ management port
      - "5672:5672" # RabbitMQ main port
    networks:
      - microservices-network

  postgres:
    image: "postgres:13"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database_backup:/docker-entrypoint-initdb.d
    networks:
      - microservices-network

  blockchain-listener:
    build:
      context: ./blockchain-listener
    ports:
      - "8081:8081"
      - "50051:50051" # gRPC port
    networks:
      - microservices-network
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=microservices
      - DB_SCHEMA=public

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8082:8082"
      - "50052:50052" # gRPC port
    networks:
      - microservices-network
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=microservices
      - DB_SCHEMA=public

  relayer-service:
    build:
      context: ./relayer-service
    ports:
      - "8083:8083"
      - "50053:50053" # gRPC port
    networks:
      - microservices-network
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=microservices
      - DB_SCHEMA=public

  common-service:
    build:
      context: ./common-service
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    depends_on:
      - postgres
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=microservices
      - DB_SCHEMA=public

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
